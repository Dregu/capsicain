# Capsicain.example.ini config file

# This is a very simple config that shows the basic features.
# Rename this file to capsicain.ini to make it active.
# See the full capsicain.cajhin.ini for a lot more information.

# Press [ESC] + [R]  to reset/reload any changes you make to this file.


[[DEFAULTS]]

IniVersion example_v1	#any string, so you can check with [ESC]+[S]tatus if you're running the right config

ActiveLayer 1	#This layer is active on startup
                #Switch with [ESC]+[0..9]  
                #0=hardcoded = no changes at all
                #1=QwertZ
                #2=Dvorak

[[FEATURES]]    

Debug			#verbose logging. Switch with [ESC]+[D]


[[MAP_KEY_TOMODIFIER_TOIFTAPPED]]

    # Map Tab to Left Control. If you tap (press+release) Tab, the [TAB] key is sent
    TAB		LCTRL   TAB

    # Map CapsLock key to virtual modifier MOD9 key. If you tap (press+release) CapsLock, nothing happens (No OPeration).
    CAPS	MOD9	NOP

 
[[MAP_MODIFIER_COMBOS]]

    # Map Caps + J to CursorLeft. Remember we mapped Caps to MOD9, and the symbol for "MOD9 down" is ....v .... ....
    J		[...v .... ....] > key (LEFT)  
    # Note that Shift + Caps + J  results in  Shift + LEFT. The Shift key is not touched by this mapping, so Windows knows it is down.

    # Map Caps + L I K to Cursor Right Up Down, because, HAVING THE CURSOR KEYS ON JKLI IS AWESOME!!! I don't know how people live without it.
    L		[...v .... ....] > key (RIGHT)  
    I		[...v .... ....] > key (UP)  
    K		[...v .... ....] > key (DOWN)  


    # Map LWin + X  to  Alt + F4  ('close window')
    X       [.... .v..] > combo (LALT+F4)


    # Bad config: Map LCtrl + N to CursorLeft
    N       [.... ..v.] > key (LEFT)
    # This does not work right. Windows knows Ctrl is down, so this results in Control + Left.
    # Here, it would be better to use a 'virtual' MOD9..MOD15 modifier instead of a 'real' modifier, because Windows does not see them.

    # Fix the last one: Map LCtrl + J to CursorLeft, but release the Control key before sending the combo
    J       [.... ..v.] > moddedKey ( LEFT & ..!. )

    # Map Caps + J to eight times left
    A		[...v .... ....] > comboNtimes (LShift+LEFT,8)

    # Map LCtrl + Backspace to Ctrl + Z (Undo), but only if NO other modifiers are pressed
    BSP		[!!! !!!! !!!! !!v!] > combo (LCTRL+Z)
    
    # Map LCtrl + L to Ctrl-Alt-Delete
    L       [.... ..v.] > moddedKey ( DEL & .... v.v. )
    

    # Map Tapped-LShift + O to 'ö'
    O		[.... .... ...T] > altChar (148)  # ö

    # Map Tapped-LShift + Tapped-RShift + A to 'Ä'
    A		[.... ...T ...T] > altChar (142)  # Ä

    # Map Tapped-LShift + A to 'ä'
    A		[.... .... ...T] > altChar (132)  # ä
    # note that this rule also matches Tap-Lshift + Tap-RShift + A.  The extra tap is ignored. So, this must come *after* the more specific rule for Ä
        

    # Map Tapped-LShift + Tapped-RShift + Tapped-Control + MOD9 + MOD10 + S   to   RAlt + RShift + LAlt + LWin + LCtrl + LShift  + T - and first release RControl if it is down
    S		[..vv ...T ..TT] > moddedKey ( T & v.!v vvvv )  # Silly, does nothing, but possible



[[MAP_ALPHA_LAYER_0]]
# Default layer 0 = do nothing, standard keyboard.
 
[[MAP_ALPHA_LAYER_1]]
layerName = QwertZ
Y  Z
Z  Y

[[MAP_ALPHA_LAYER_2]]
layerName = DVORAK_Simplified_US

MAPFROM
   q  w  e  r  t     y  u  i  o  p  [  ]
    a  s  d  f  g     h  j  k  l  ;  '
     z  x  c  v  b     n  m  ,  .  /
MAPTO
   '  ,  .  p  y     f  g  c  r  l  /  =      #'this is a comment
    a  o  e  u  i     d  h  t  n  s  -
     ;  q  j  k  x     b  m  w  v  z
MAPEND
